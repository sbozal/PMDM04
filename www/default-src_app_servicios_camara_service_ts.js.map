{"version":3,"file":"default-src_app_servicios_camara_service_ts.js","mappings":"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","sources":["./src/app/servicios/camara.service.ts","./src/app/servicios/gestion-storage.service.ts","./node_modules/@capacitor/camera/dist/esm/definitions.js","./node_modules/@capacitor/camera/dist/esm/index.js","./node_modules/@capacitor/filesystem/dist/esm/definitions.js","./node_modules/@capacitor/filesystem/dist/esm/index.js","./node_modules/@capacitor/preferences/dist/esm/index.js"],"sourcesContent":["import { Capacitor } from '@capacitor/core';\r\nimport { Platform } from '@ionic/angular';\r\nimport { Filesystem, Directory } from '@capacitor/filesystem';\r\nimport { GestionStorageService } from './gestion-storage.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CamaraService {\r\n\r\n  listaUrl: string[] = [];\r\n  listaPath: string[]= [];\r\n\r\n  constructor(private platform: Platform, private usarStorage: GestionStorageService) {\r\n    this.loadSaved();\r\n   }\r\n\r\n   private async loadSaved() {\r\n    // Recupera los datos de Storage en formato string\r\n    const photoList = await this.usarStorage.getObject(\"rutas\");\r\n\r\n    // Lo parsea a un array de objetos IFoto y lo almacena en el atributo accesoFotos\r\n    // Si no obtiene datos inicializará el array para poder empezar a almacenar fotos.\r\n    this.listaPath = JSON.parse(photoList.value) || [];    \r\n    \r\n    // Se obtiene una URL válida para visualizar cada foto guardada en el sistema de archivos\r\n    // En los navegadores debemos cargar las imágenes en formato base64 para que se visualicen correctamente\r\n    // En los dispositivos podemos obtener la URL a partir del path\r\n\r\n    let webviewPath: string;\r\n    for (let photo of this.listaPath) {\r\n      if (!this.platform.is(\"hybrid\")) {     \r\n          const readFile = await Filesystem.readFile({\r\n              path: photo,\r\n              directory: Directory.Data\r\n          });\r\n\r\n          // La URL de la foto en base64 para que se pueda visualizar\r\n          webviewPath = `data:image/jpeg;base64,${readFile.data}`;      \r\n      } else {\r\n        webviewPath = Capacitor.convertFileSrc(photo);\r\n      }\r\n      this.listaUrl.push(webviewPath);\r\n    }\r\n  }\r\n\r\n  getListaUrl(): string[] {\r\n    return this.listaUrl;\r\n  }\r\n\r\n  public async sacarFoto() {\r\n    const image = await Camera.getPhoto({\r\n      quality: 90,\r\n      allowEditing: false,\r\n      resultType: CameraResultType.Base64,\r\n      source: CameraSource.Camera\r\n    });\r\n\r\n    // Guardamosla URL para visualizar la imagen añadiendo la cabecera base64\r\n    this.listaUrl.push(\"data:image/jpeg;base64,\" + image.base64String);\r\n\r\n    this.savePicture(image);\r\n\r\n  }\r\n\r\n  private async savePicture(image: any) {\r\n\r\n    let base64Data = image.base64String;\r\n    // Guarda el fichero\r\n    const fileName = new Date().getTime() + '.jpeg';\r\n    const savedFile = await Filesystem.writeFile({\r\n      path: fileName,\r\n      data: base64Data,\r\n      directory: Directory.Data\r\n    });\r\n    \r\n    // Si trabajamos con el navegador, guardamos solo el nombre del fichero. Lo necesitaremos para \r\n    // Con dispositivos móviles guardaremos la ruta que nos devuelve\r\n    let ruta: string;\r\n  \r\n    if (this.platform.is('hybrid')) {\r\n      ruta = savedFile.uri;\r\n    } else {\r\n      ruta = fileName;\r\n  \r\n    }\r\n  \r\n    this.listaPath.push(ruta);\r\n  \r\n    // Almacenamos los datos de las fotos en Storage para poder acceder a ellas\r\n    this.usarStorage.setObject(\"rutas\", this.listaPath);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Preferences } from '@capacitor/preferences';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GestionStorageService {\r\n\r\n  constructor() {}\r\n\r\n  // Almacena una cadena de caracteres. Para cada string se necesita un identificador (key) y su valor (value)\r\n  // Mediante await se indica que es un método asíncrono que devuelve una promesa\r\n  async setString(key: string, value: string) {\r\n    await Preferences.set({ key, value });\r\n  }\r\n  \r\n  // A partir de su clave identificadora (key) obtiene el valor de una cadena de caracteres almacenada en local\r\n  async getString(key: string): Promise<{ value: any }> {\r\n    return await Preferences.get({ key });\r\n  }\r\n  \r\n  // Almacena un objeto con formato JSON en local.\r\n  // Por cada objeto, se necesita una clave (key) y el valor del objeto (value)\r\n  async setObject(key: string, value: any) {\r\n    await Preferences.set({ key, value: JSON.stringify(value) });\r\n  }\r\n  \r\n  // A partir de su clave obtiene un objeto almacenado en local\r\n  // Antes de devolverlo, debe ser convertido de formato JSON a formato normal\r\n  async getObject(key: string): Promise<{ value: string }> {\r\n    const ret: any = await Preferences.get({ key });\r\n    return ret;\r\n  }\r\n  \r\n  // Dada su clave, elimina un elemento almacenado en local independientemente de su tipo\r\n  async removeItem(key: string) {\r\n    await Preferences.remove({ key });\r\n  }\r\n  \r\n  // Vacía el almacenamiento local\r\n  async clear() {\r\n    await Preferences.clear();\r\n  }\r\n}\r\n","export var CameraSource;\n(function (CameraSource) {\n    /**\n     * Prompts the user to select either the photo album or take a photo.\n     */\n    CameraSource[\"Prompt\"] = \"PROMPT\";\n    /**\n     * Take a new photo using the camera.\n     */\n    CameraSource[\"Camera\"] = \"CAMERA\";\n    /**\n     * Pick an existing photo from the gallery or photo album.\n     */\n    CameraSource[\"Photos\"] = \"PHOTOS\";\n})(CameraSource || (CameraSource = {}));\nexport var CameraDirection;\n(function (CameraDirection) {\n    CameraDirection[\"Rear\"] = \"REAR\";\n    CameraDirection[\"Front\"] = \"FRONT\";\n})(CameraDirection || (CameraDirection = {}));\nexport var CameraResultType;\n(function (CameraResultType) {\n    CameraResultType[\"Uri\"] = \"uri\";\n    CameraResultType[\"Base64\"] = \"base64\";\n    CameraResultType[\"DataUrl\"] = \"dataUrl\";\n})(CameraResultType || (CameraResultType = {}));\n","import { registerPlugin } from '@capacitor/core';\nconst Camera = registerPlugin('Camera', {\n    web: () => import('./web').then(m => new m.CameraWeb()),\n});\nexport * from './definitions';\nexport { Camera };\n","export var Directory;\n(function (Directory) {\n    /**\n     * The Documents directory\n     * On iOS it's the app's documents directory.\n     * Use this directory to store user-generated content.\n     * On Android it's the Public Documents folder, so it's accessible from other apps.\n     * It's not accesible on Android 10 unless the app enables legacy External Storage\n     * by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag\n     * in the `AndroidManifest.xml`.\n     * It's not accesible on Android 11 or newer.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"Documents\"] = \"DOCUMENTS\";\n    /**\n     * The Data directory\n     * On iOS it will use the Documents directory.\n     * On Android it's the directory holding application files.\n     * Files will be deleted when the application is uninstalled.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"Data\"] = \"DATA\";\n    /**\n     * The Library directory\n     * On iOS it will use the Library directory.\n     * On Android it's the directory holding application files.\n     * Files will be deleted when the application is uninstalled.\n     *\n     * @since 1.1.0\n     */\n    Directory[\"Library\"] = \"LIBRARY\";\n    /**\n     * The Cache directory\n     * Can be deleted in cases of low memory, so use this directory to write app-specific files\n     * that your app can re-create easily.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"Cache\"] = \"CACHE\";\n    /**\n     * The external directory\n     * On iOS it will use the Documents directory\n     * On Android it's the directory on the primary shared/external\n     * storage device where the application can place persistent files it owns.\n     * These files are internal to the applications, and not typically visible\n     * to the user as media.\n     * Files will be deleted when the application is uninstalled.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"External\"] = \"EXTERNAL\";\n    /**\n     * The external storage directory\n     * On iOS it will use the Documents directory\n     * On Android it's the primary shared/external storage directory.\n     * It's not accesible on Android 10 unless the app enables legacy External Storage\n     * by adding `android:requestLegacyExternalStorage=\"true\"` in the `application` tag\n     * in the `AndroidManifest.xml`.\n     * It's not accesible on Android 11 or newer.\n     *\n     * @since 1.0.0\n     */\n    Directory[\"ExternalStorage\"] = \"EXTERNAL_STORAGE\";\n})(Directory || (Directory = {}));\nexport var Encoding;\n(function (Encoding) {\n    /**\n     * Eight-bit UCS Transformation Format\n     *\n     * @since 1.0.0\n     */\n    Encoding[\"UTF8\"] = \"utf8\";\n    /**\n     * Seven-bit ASCII, a.k.a. ISO646-US, a.k.a. the Basic Latin block of the\n     * Unicode character set\n     * This encoding is only supported on Android.\n     *\n     * @since 1.0.0\n     */\n    Encoding[\"ASCII\"] = \"ascii\";\n    /**\n     * Sixteen-bit UCS Transformation Format, byte order identified by an\n     * optional byte-order mark\n     * This encoding is only supported on Android.\n     *\n     * @since 1.0.0\n     */\n    Encoding[\"UTF16\"] = \"utf16\";\n})(Encoding || (Encoding = {}));\n/**\n * @deprecated Use `Directory`.\n * @since 1.0.0\n */\nexport const FilesystemDirectory = Directory;\n/**\n * @deprecated Use `Encoding`.\n * @since 1.0.0\n */\nexport const FilesystemEncoding = Encoding;\n","import { registerPlugin } from '@capacitor/core';\nconst Filesystem = registerPlugin('Filesystem', {\n    web: () => import('./web').then(m => new m.FilesystemWeb()),\n});\nexport * from './definitions';\nexport { Filesystem };\n","import { registerPlugin } from '@capacitor/core';\nconst Preferences = registerPlugin('Preferences', {\n    web: () => import('./web').then(m => new m.PreferencesWeb()),\n});\nexport * from './definitions';\nexport { Preferences };\n"],"names":["CameraSource","CameraDirection","CameraResultType","registerPlugin","Camera","web","then","m","CameraWeb","Directory","Encoding","FilesystemDirectory","FilesystemEncoding","Filesystem","FilesystemWeb","Preferences","PreferencesWeb"],"sourceRoot":"webpack:///","x_google_ignoreList":[2,3,4,5,6]}